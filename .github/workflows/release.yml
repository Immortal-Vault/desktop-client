name: Release windows

on:
  push:
    tags:
      - v*

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: ⚙️ Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: x86_64-pc-windows-msvc

      - name: 🗂️ Cache cargo registry + target
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: 🗂️ Cache yarn
        uses: actions/cache@v3
        with:
          path: |
            .yarn/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 📦 Install Yarn
        run: npm install -g yarn

      - name: 🧪 Check cache hit
        run: |
          echo "node_modules:"
          ls -la node_modules | head -n 10
          echo "Rust target:"
          ls -la src-tauri/target | head -n 10

      - name: 📥 Install project dependencies
        run: yarn install --immutable

      - name: 🌐 Download and install WebView2 (non-blocking)
        run: |
          $url = "https://go.microsoft.com/fwlink/p/?LinkId=2124703"
          $output = "$env:TEMP\\MicrosoftEdgeWebview2Setup.exe"
          Invoke-WebRequest -Uri $url -OutFile $output -TimeoutSec 60
          Start-Process -FilePath $output -ArgumentList '/install','/quiet','/norestart'

      - name: 🛠 Build Tauri app (.exe)
        run: yarn windows-release

      - name: 🚀 Upload .exe to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: src-tauri/target/release/bundle/nsis/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
