name: Release windows

on:
  push:
    tags:
      - v*

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: ⚙️ Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: x86_64-pc-windows-msvc

      - name: 💾 Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          save-always: true
          key: Windows-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            Windows-cargo-

      - name: 💾 Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            node_modules
          key: Windows-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            Windows-yarn-

      - name: 📦 Install Yarn
        run: npm install -g yarn

      - name: 📥 Install project dependencies
        run: yarn install --frozen-lockfile

      - name: 🌐 Download and install WebView2 (non-blocking)
        run: |
          $url = "https://go.microsoft.com/fwlink/p/?LinkId=2124703"
          $output = "$env:TEMP\\MicrosoftEdgeWebview2Setup.exe"
          Invoke-WebRequest -Uri $url -OutFile $output -TimeoutSec 60
          Start-Process -FilePath $output -ArgumentList '/install','/quiet','/norestart'

      - name: 🛠 Build Tauri app (.exe)
        run: yarn windows-release
        env:
          CARGO_TARGET_DIR: .cargo-target

      - name: 🚀 Upload .exe to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: src-tauri/target/release/bundle/nsis/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
